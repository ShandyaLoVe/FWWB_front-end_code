import { DefineComponent, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';
import { PlusDialogSelfProps as PlusDialogProps } from './type';

declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<PlusDialogProps>, {
    modelValue: boolean;
    confirmText: string;
    confirmLoading: boolean;
    cancelText: string;
    hasFooter: boolean;
    title: string;
    top: string;
    width: string;
    footerAlign: string;
}>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    "update:modelValue": (visible: boolean) => void;
    cancel: () => void;
    confirm: () => void;
}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<PlusDialogProps>, {
    modelValue: boolean;
    confirmText: string;
    confirmLoading: boolean;
    cancelText: string;
    hasFooter: boolean;
    title: string;
    top: string;
    width: string;
    footerAlign: string;
}>>> & {
    "onUpdate:modelValue"?: ((visible: boolean) => any) | undefined;
    onCancel?: (() => any) | undefined;
    onConfirm?: (() => any) | undefined;
}, {
    width: string;
    top: string;
    title: string;
    modelValue: boolean;
    hasFooter: boolean;
    footerAlign: "right" | "left" | "center";
    confirmText: string;
    cancelText: string;
    confirmLoading: boolean;
}, {}>, {
    header?(_: {}): any;
    default?(_: {}): any;
    footer?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

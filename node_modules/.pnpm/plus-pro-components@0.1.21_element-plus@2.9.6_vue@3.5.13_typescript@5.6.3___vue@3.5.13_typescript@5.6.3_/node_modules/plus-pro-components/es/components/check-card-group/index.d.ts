import { RenderTypes } from 'plus-pro-components';
import { PlusCheckCardProps } from 'plus-pro-components';
import { ValueType } from './src/index.vue';
import { CreateComponentPublicInstance, ExtractPropTypes, PropType, ComponentOptionsMixin, VNodeProps, AllowedComponentProps, ComponentCustomProps, ComponentOptionsBase } from 'vue';
export type { PlusCheckCardGroupProps } from './src/index.vue';
export declare const PlusCheckCardGroup: {
    new (...args: any[]): CreateComponentPublicInstance<Readonly< ExtractPropTypes<{
        disabled: {
            type: PropType<boolean>;
            default: boolean;
        };
        size: {
            type: PropType<"" | "default" | "small" | "large">;
            default: undefined;
        };
        modelValue: {
            type: PropType<ValueType>;
            default: () => never[];
        };
        options: {
            type: PropType<( PlusCheckCardProps & {
                value: string | number;
            })[]>;
            default: () => never[];
        };
        multiple: {
            type: PropType<boolean>;
            default: boolean;
        };
    }>> & {
        onChange?: ((checked: ValueType) => any) | undefined;
        "onUpdate:modelValue"?: ((checked: ValueType) => any) | undefined;
        onExtra?: ((item: PlusCheckCardProps & {
            value: string | number;
        }) => any) | undefined;
    }, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
        "update:modelValue": (checked: ValueType) => void;
        change: (checked: ValueType) => void;
        extra: (item: PlusCheckCardProps & {
            value: string | number;
        }) => void;
    }, VNodeProps & AllowedComponentProps & ComponentCustomProps & Readonly< ExtractPropTypes<{
        disabled: {
            type: PropType<boolean>;
            default: boolean;
        };
        size: {
            type: PropType<"" | "default" | "small" | "large">;
            default: undefined;
        };
        modelValue: {
            type: PropType<ValueType>;
            default: () => never[];
        };
        options: {
            type: PropType<( PlusCheckCardProps & {
                value: string | number;
            })[]>;
            default: () => never[];
        };
        multiple: {
            type: PropType<boolean>;
            default: boolean;
        };
    }>> & {
        onChange?: ((checked: ValueType) => any) | undefined;
        "onUpdate:modelValue"?: ((checked: ValueType) => any) | undefined;
        onExtra?: ((item: PlusCheckCardProps & {
            value: string | number;
        }) => any) | undefined;
    }, {
        disabled: boolean;
        size: "" | "default" | "small" | "large";
        modelValue: ValueType;
        options: ( PlusCheckCardProps & {
            value: string | number;
        })[];
        multiple: boolean;
    }, true, {}, {}, {
        P: {};
        B: {};
        D: {};
        C: {};
        M: {};
        Defaults: {};
    }, Readonly< ExtractPropTypes<{
        disabled: {
            type: PropType<boolean>;
            default: boolean;
        };
        size: {
            type: PropType<"" | "default" | "small" | "large">;
            default: undefined;
        };
        modelValue: {
            type: PropType<ValueType>;
            default: () => never[];
        };
        options: {
            type: PropType<( PlusCheckCardProps & {
                value: string | number;
            })[]>;
            default: () => never[];
        };
        multiple: {
            type: PropType<boolean>;
            default: boolean;
        };
    }>> & {
        onChange?: ((checked: ValueType) => any) | undefined;
        "onUpdate:modelValue"?: ((checked: ValueType) => any) | undefined;
        onExtra?: ((item: PlusCheckCardProps & {
            value: string | number;
        }) => any) | undefined;
    }, {}, {}, {}, {}, {
        disabled: boolean;
        size: "" | "default" | "small" | "large";
        modelValue: ValueType;
        options: ( PlusCheckCardProps & {
            value: string | number;
        })[];
        multiple: boolean;
    }>;
    __isFragment?: undefined;
    __isTeleport?: undefined;
    __isSuspense?: undefined;
} & ComponentOptionsBase<Readonly< ExtractPropTypes<{
    disabled: {
        type: PropType<boolean>;
        default: boolean;
    };
    size: {
        type: PropType<"" | "default" | "small" | "large">;
        default: undefined;
    };
    modelValue: {
        type: PropType<ValueType>;
        default: () => never[];
    };
    options: {
        type: PropType<( PlusCheckCardProps & {
            value: string | number;
        })[]>;
        default: () => never[];
    };
    multiple: {
        type: PropType<boolean>;
        default: boolean;
    };
}>> & {
    onChange?: ((checked: ValueType) => any) | undefined;
    "onUpdate:modelValue"?: ((checked: ValueType) => any) | undefined;
    onExtra?: ((item: PlusCheckCardProps & {
        value: string | number;
    }) => any) | undefined;
}, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    "update:modelValue": (checked: ValueType) => void;
    change: (checked: ValueType) => void;
    extra: (item: PlusCheckCardProps & {
        value: string | number;
    }) => void;
}, string, {
    disabled: boolean;
    size: "" | "default" | "small" | "large";
    modelValue: ValueType;
    options: ( PlusCheckCardProps & {
        value: string | number;
    })[];
    multiple: boolean;
}, {}, string, {}> & VNodeProps & AllowedComponentProps & ComponentCustomProps & (new () => {
    $slots: Partial<Record<string, (_: {
        avatar: string | undefined;
        title: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }) => any>> & Partial<Record<string, (_: {
        title: string | undefined;
        avatar: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }) => any>> & Partial<Record<string, (_: {
        title: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | undefined;
        avatar: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }) => any>> & Partial<Record<string, (_: {
        title: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        avatar: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }) => any>> & {
        avatar?(_: {
            avatar: string | undefined;
            title: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
            description: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        }): any;
        title?(_: {
            title: string | undefined;
            avatar: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
            description: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        }): any;
        description?(_: {
            title: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
            description: string | undefined;
            avatar: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        }): any;
        extra?(_: {
            title: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
            avatar: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
            description: string | ((data: Pick< PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        }): any;
    };
});

'use strict';

var elementPlus = require('element-plus');
var index = require('../../radio/index.js');
var index$1 = require('../../date-picker/index.js');
var index$2 = require('../../input-tag/index.js');

const FieldComponentMap = {
  // plus
  "plus-radio": {
    component: index.PlusRadio,
    hasOptions: true
  },
  "plus-date-picker": {
    component: index$1.PlusDatePicker
  },
  "plus-input-tag": {
    component: index$2.PlusInputTag
  },
  // el
  autocomplete: {
    component: elementPlus.ElAutocomplete,
    props: { placeholder: "plus.field.pleaseEnter" },
    hasSelectEvent: true
  },
  cascader: {
    component: elementPlus.ElCascader,
    hasOptions: true
  },
  checkbox: {
    component: elementPlus.ElCheckboxGroup,
    children: elementPlus.ElCheckbox,
    hasVersionCompatibility: true
  },
  "color-picker": {
    component: elementPlus.ElColorPicker
  },
  "date-picker": {
    component: elementPlus.ElDatePicker,
    props: {
      startPlaceholder: "plus.datepicker.startPlaceholder",
      endPlaceholder: "plus.datepicker.endPlaceholder"
    }
  },
  "input-number": {
    component: elementPlus.ElInputNumber,
    props: { placeholder: "plus.field.pleaseEnter" }
  },
  radio: {
    component: elementPlus.ElRadioGroup,
    children: elementPlus.ElRadio,
    hasVersionCompatibility: true
  },
  rate: {
    component: elementPlus.ElRate
  },
  select: {
    component: elementPlus.ElSelect,
    children: elementPlus.ElOption
  },
  slider: {
    component: elementPlus.ElSlider
  },
  switch: {
    component: elementPlus.ElSwitch
  },
  "time-picker": {
    component: elementPlus.ElTimePicker
  },
  "time-select": {
    component: elementPlus.ElTimeSelect
  },
  transfer: {
    component: elementPlus.ElTransfer
  },
  input: {
    component: elementPlus.ElInput,
    props: { placeholder: "plus.field.pleaseEnter" }
  },
  textarea: {
    component: elementPlus.ElInput,
    props: { type: "textarea", placeholder: "plus.field.pleaseEnter" }
  },
  "tree-select": {
    component: elementPlus.ElTreeSelect
  },
  "select-v2": {
    component: elementPlus.ElSelectV2,
    hasOptions: true
  }
};
const hasFieldComponent = (valueType) => Object.keys(FieldComponentMap).includes(
  valueType
);
const getFieldComponent = (valueType) => Reflect.get(FieldComponentMap, valueType) || {};

exports.FieldComponentMap = FieldComponentMap;
exports.getFieldComponent = getFieldComponent;
exports.hasFieldComponent = hasFieldComponent;

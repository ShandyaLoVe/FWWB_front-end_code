import { DefineComponent, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';
import { PlusHeaderSelfProps as PlusHeaderProps } from './type';

declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<PlusHeaderProps>, {
    logo: string;
    title: string;
    trigger: string;
    userInfo: () => {};
    dropdownList: () => never[];
    logoutText: string;
    hasUserInfo: boolean;
    fixed: boolean;
}>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    clickDropdownItem: (item: {
        label: string;
        value: string;
    }) => void;
}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<PlusHeaderProps>, {
    logo: string;
    title: string;
    trigger: string;
    userInfo: () => {};
    dropdownList: () => never[];
    logoutText: string;
    hasUserInfo: boolean;
    fixed: boolean;
}>>> & {
    onClickDropdownItem?: ((item: {
        label: string;
        value: string;
    }) => any) | undefined;
}, {
    fixed: boolean;
    trigger: "hover" | "click";
    title: string;
    logo: string;
    logoutText: string;
    userInfo: {
        [index: string]: unknown;
        [index: number]: unknown;
        [index: symbol]: unknown;
        username?: string | undefined;
        avatar?: string | undefined;
    };
    hasUserInfo: boolean;
    dropdownList: {
        label: string;
        value: string;
    }[];
}, {}>, {
    "header-left"?(_: {
        logo: string;
        title: string;
    }): any;
    "header-right"?(_: {
        userInfo: {
            [index: string]: unknown;
            [index: number]: unknown;
            [index: symbol]: unknown;
            username?: string | undefined;
            avatar?: string | undefined;
        };
        title: string;
    }): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

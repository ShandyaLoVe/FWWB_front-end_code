import { ButtonsCallBackParams, ActionBarButtonsRow } from './type';
import { RecordType } from 'plus-pro-components/es/types';
import { TableColumnCtx } from 'element-plus';
import { ComputedRef, DefineComponent, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';

export interface ActionBarProps {
    /**
     * 操作栏名称  默认值为 `'操作栏'`
     * @version v0.1.0 类型新增ComputedRef<string>
     */
    label?: string | ComputedRef<string>;
    /**
     * 操作栏固定   默认值为 `'right'`
     */
    fixed?: string;
    /**
     * 显示出来的按钮个数  默认值为 `3`
     */
    showNumber?: number;
    /**
     * 更多按钮显示策略
     * @version 0.1.20
     * @default false
     */
    showLimitIncludeMore?: boolean;
    /**
     * 操作按钮的类型   默认值为 `'link'`
     */
    type?: 'icon' | 'button' | 'link';
    /**
     * 操作按钮集合   默认值为 `[]`
     */
    buttons?: ActionBarButtonsRow[];
    /**
     * 表格操作栏 el-table-column 的其width   默认值为 `200`
     */
    width?: string | number;
    /**
     * 表格操作栏 el-table-column 的其他props   默认值为 `{}`
     */
    actionBarTableColumnProps?: Partial<TableColumnCtx<RecordType>>;
    /**
     * 表格操作栏 需要二次确认的类型，默认是 messageBox
     * @version v0.1.17
     */
    confirmType?: 'messageBox' | 'popconfirm';
}
export interface PlusTableActionBarEmits {
    (e: 'clickAction', data: ButtonsCallBackParams): void;
    (e: 'clickActionConfirmCancel', data: ButtonsCallBackParams): void;
}
declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<ActionBarProps>, {
    label: string;
    fixed: string;
    type: string;
    buttons: () => never[];
    width: number;
    showNumber: number;
    actionBarTableColumnProps: () => {};
    confirmType: string;
    showLimitIncludeMore: boolean;
}>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    clickAction: (data: ButtonsCallBackParams) => void;
    clickActionConfirmCancel: (data: ButtonsCallBackParams) => void;
}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<ActionBarProps>, {
    label: string;
    fixed: string;
    type: string;
    buttons: () => never[];
    width: number;
    showNumber: number;
    actionBarTableColumnProps: () => {};
    confirmType: string;
    showLimitIncludeMore: boolean;
}>>> & {
    onClickAction?: ((data: ButtonsCallBackParams) => any) | undefined;
    onClickActionConfirmCancel?: ((data: ButtonsCallBackParams) => any) | undefined;
}, {
    width: string | number;
    type: "link" | "icon" | "button";
    label: string | ComputedRef<string>;
    fixed: string;
    showNumber: number;
    buttons: ActionBarButtonsRow[];
    actionBarTableColumnProps: Partial<TableColumnCtx<RecordType>>;
    showLimitIncludeMore: boolean;
    confirmType: "messageBox" | "popconfirm";
}, {}>, {
    "action-bar-more-icon"?(_: {}): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};

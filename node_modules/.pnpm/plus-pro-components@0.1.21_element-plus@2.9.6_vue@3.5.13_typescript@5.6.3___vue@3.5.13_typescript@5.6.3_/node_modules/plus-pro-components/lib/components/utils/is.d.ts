/**
 * Object.prototype.toString 别名
 */
export declare const objectToString: () => string;
/**
 * 获取类型
 * @param value
 * @returns
 */
export declare const toTypeString: (value: any) => string;
/**
 * 拿到类型字符串
 * @param value
 * @returns
 */
export declare const toRawType: (value: any) => string;
/**
 * 判断是否是数组
 */
export declare const isArray: (arg: any) => arg is any[];
/**
 * 判断是否是Map
 * @param val
 * @returns
 */
export declare const isMap: (val: any) => val is Map<any, any>;
/**
 * 判断是否是Set
 * @param val
 * @returns
 */
export declare const isSet: (val: any) => val is Set<any>;
/**
 * 判断是否是Date
 * @param val
 * @returns
 */
export declare const isDate: (val: any) => val is Date;
/**
 * 判断是否是Reg
 * @param val
 * @returns
 */
export declare const isRegExp: (val: any) => val is RegExp;
/**
 * 判断是否是函数
 * @param val
 * @returns
 */
export declare const isFunction: (val: any) => val is Function;
/**
 * 判断是否是字符串
 * @param val
 * @returns
 */
export declare const isString: (val: any) => val is string;
/**
 * 判断是否是Symbol
 * @param val
 * @returns
 */
export declare const isSymbol: (val: any) => val is symbol;
/**
 * 判断是否是boolean
 * @param val
 * @returns
 */
export declare const isBoolean: (val: any) => val is boolean;
/**
 * 判断是否是object
 * @param val
 * @returns
 */
export declare const isObject: (val: any) => val is Record<string | number | symbol, any>;
/**
 * 判断是否是Promise
 * @param val
 * @returns
 */
export declare const isPromise: <T = any>(val: any) => val is Promise<T>;
/**
 * 判断是否是 纯对象 object
 * @param val
 * @returns
 */
export declare const isPlainObject: (val: any) => val is Record<string | number | symbol, any>;
/**
 * 是否是空对象
 * @param val
 * @returns
 */
export declare const isEmptyObject: (val: any) => val is Record<string | number | symbol, any>;
/**
 * 是否是链接
 * @param url
 * @returns
 */
export declare function isUrl(url: string): url is string;
/**
 * 是否是SVGElement
 * @param tag
 * @returns
 */
export declare const isSVGElement: (tag: any) => tag is SVGElement;

import { DefineComponent, ComponentOptionsMixin, PublicProps, ExtractPropTypes, PropType } from 'vue';
import { RecordType, RenderTypes } from 'plus-pro-components/es/types';
import { ComponentSize } from 'element-plus';

export interface PlusCheckCardProps {
    modelValue?: boolean;
    size?: ComponentSize;
    avatar?: string | ((data: Pick<PlusCheckCardProps, 'avatar' | 'title' | 'description'>) => RenderTypes);
    avatarProps?: RecordType;
    title?: string | ((data: Pick<PlusCheckCardProps, 'avatar' | 'title' | 'description'>) => RenderTypes);
    description?: string | ((data: Pick<PlusCheckCardProps, 'avatar' | 'title' | 'description'>) => RenderTypes);
    disabled?: boolean;
    extra?: (data: Pick<PlusCheckCardProps, 'avatar' | 'title' | 'description'>) => RenderTypes;
}
export interface PlusCheckCardEmits {
    (e: 'update:modelValue', checked: boolean): void;
    (e: 'change', checked: boolean): void;
    (e: 'extra'): void;
}
export interface CheckCardState {
    checked: boolean;
}
declare const _default: __VLS_WithTemplateSlots< DefineComponent<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<PlusCheckCardProps>, {
    modelValue: boolean;
    size: string;
    avatar: undefined;
    avatarProps: () => {};
    title: undefined;
    description: undefined;
    extra: undefined;
    disabled: boolean;
}>, {}, unknown, {}, {}, ComponentOptionsMixin, ComponentOptionsMixin, {
    "update:modelValue": (checked: boolean) => void;
    change: (checked: boolean) => void;
    extra: () => void;
}, string, PublicProps, Readonly< ExtractPropTypes<__VLS_WithDefaults<__VLS_TypePropsToRuntimeProps<PlusCheckCardProps>, {
    modelValue: boolean;
    size: string;
    avatar: undefined;
    avatarProps: () => {};
    title: undefined;
    description: undefined;
    extra: undefined;
    disabled: boolean;
}>>> & {
    onChange?: ((checked: boolean) => any) | undefined;
    "onUpdate:modelValue"?: ((checked: boolean) => any) | undefined;
    onExtra?: (() => any) | undefined;
}, {
    avatar: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes);
    disabled: boolean;
    extra: (data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes;
    size: "" | "default" | "small" | "large";
    title: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes);
    modelValue: boolean;
    description: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes);
    avatarProps: RecordType;
}, {}>, {
    avatar?(_: {
        avatar: string | undefined;
        title: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }): any;
    title?(_: {
        title: string | undefined;
        avatar: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }): any;
    extra?(_: {
        title: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        avatar: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }): any;
    description?(_: {
        title: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
        description: string | undefined;
        avatar: string | ((data: Pick<PlusCheckCardProps, "avatar" | "title" | "description">) => RenderTypes) | undefined;
    }): any;
}>;
export default _default;
type __VLS_NonUndefinedable<T> = T extends undefined ? never : T;
type __VLS_TypePropsToRuntimeProps<T> = {
    [K in keyof T]-?: {} extends Pick<T, K> ? {
        type: PropType<__VLS_NonUndefinedable<T[K]>>;
    } : {
        type: PropType<T[K]>;
        required: true;
    };
};
type __VLS_WithDefaults<P, D> = {
    [K in keyof Pick<P, keyof P>]: K extends keyof D ? __VLS_Prettify<P[K] & {
        default: D[K];
    }> : P[K];
};
type __VLS_Prettify<T> = {
    [K in keyof T]: T[K];
} & {};
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
